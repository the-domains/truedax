<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[truedax]]></title>
        <description><![CDATA[truedax]]></description>
        <link>http://truedax.com/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Wed, 20 Apr 2016 21:16:47 GMT</lastBuildDate>
        <atom:link href="http://truedax.com/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Detecting the use of "curl | bash" server side]]></title>
            <description><![CDATA[<article><h1>Detecting the use of "curl | bash" server side</h1><p>Published on by Installing software by piping from curl to bash is obviously a bad idea and a knowledgable user will most likely check the content first. So wouldn't it be great if a malicious payload would only render when piped to bash?</p><img src="https://www.idontplaydarts.com/images/tcpchart.png"></article>]]></description>
            <link>https://www.idontplaydarts.com/2016/04/detecting-curl-pipe-bash-server-side/</link>
            <guid isPermaLink="false">76fd1542-bae8-42aa-9b80-4c83bdd8b374</guid>
            <pubDate>Wed, 20 Apr 2016 21:15:43 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Security Think Tank: Allocate maintenance processes to each piece of key software]]></title>
            <description><![CDATA[<article><h1>Security Think Tank: Allocate maintenance processes to each piece of key software</h1><p>Software developed and deployed to the internet today is built on the shoulders of giants. Even a simple " Hello World " web-page depends on hundreds of millions of lines of code. The surface area of modern systems is large.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/310161c14bfc688cca5bfa77f96cbb3d0b75433b.png"></article>]]></description>
            <link>http://www.computerweekly.com/opinion/Security-Think-Tank-Allocate-maintenance-processes-to-each-piece-of-key-software</link>
            <guid isPermaLink="false">f98a5859-b052-4d4b-b7c8-de44cfada392</guid>
            <pubDate>Wed, 13 Apr 2016 21:21:16 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[HPE Is Moving to Microservices with Containers and Stackato - The New Stack]]></title>
            <description><![CDATA[<article><h1>HPE Is Moving to Microservices with Containers and Stackato - The New Stack</h1><p>HPE practices what it preaches when it comes to cloud-native development, recently undertaking the task of migrating a set of monolithic information services applications to a microservice-based approach. "In many cases, we're actually using Stackato, Cloud Foundry, and Docker as the architectural principles that are underpinning those transformations.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/86ad8ff48ae0d6eb84a4783558ac935e7c263f35.jpg"></article>]]></description>
            <link>http://thenewstack.io/hpe-empowers-enterprise-developer-part-2-2/</link>
            <guid isPermaLink="false">84d36a65-ade6-4731-8dfa-1a700baaa874</guid>
            <pubDate>Wed, 13 Apr 2016 16:32:37 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Continuous Deployment at Instagram]]></title>
            <description><![CDATA[<article><h1>Continuous Deployment at Instagram</h1><p>At Instagram, we deploy our backend code 30-50 times a day... whenever engineers commit changes to master... with no human involvement in most cases. This may sound crazy, especially at our scale, but it works really well. This post talks about how we implemented this system and got it working smoothly.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/f91fdda25de95c7ea0624200ef701b02a20a2aec.jpg"></article>]]></description>
            <link>http://engineering.instagram.com/posts/1125308487520335/continuous-deployment-at-instagram/</link>
            <guid isPermaLink="false">a162e394-8c5b-4d60-9909-cb453f4cc9dc</guid>
            <pubDate>Wed, 13 Apr 2016 16:05:23 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[DevOps isn't just about the new: It's about cleaning up the old, too]]></title>
            <description><![CDATA[<article><h1>DevOps isn't just about the new: It's about cleaning up the old, too</h1><p>As one of my coworkers used to say when confronted with The Latest Development Improvement Methodology: " Why don't you come down here and chum this stuff?" - except he used the language of a sailor. In trying to implement the latest breakfast cereal agenda, DevOps, one of the primary chumming tasks is dealing with all your "pre-DevOps" software and services.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/10e43ce3c57ea793c28d2308cabca7938a994285.jpg"></article>]]></description>
            <link>http://www.theregister.co.uk/2016/04/12/land_the_legacy_big_fish/</link>
            <guid isPermaLink="false">b3f743d0-030e-4920-9bdf-acac8e0281a0</guid>
            <pubDate>Wed, 13 Apr 2016 16:04:05 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Deploying GoCD using Docker Compose on Rancher]]></title>
            <description><![CDATA[<article><h1>Deploying GoCD using Docker Compose on Rancher</h1><p>Raul Sanchez is a microservices and Dev0ps architect in the innovation department at BBVA, exploring new technologies, bringing them to the company and the production lifecycle. In his spare time, he is a developer who collaborates on open source projects. He's spent more than 20 years working on GNU/Linux and unix systems in different areas and sectors.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/fa2018893c97faf5a056052cb82126b285e39489.png"></article>]]></description>
            <link>http://rancher.com/deploying-gocd-using-docker-compose-on-rancher/</link>
            <guid isPermaLink="false">25900525-2cd5-4a72-8f30-8bc2e4218009</guid>
            <pubDate>Wed, 13 Apr 2016 16:01:17 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[22 insults no developer wants to hear]]></title>
            <description><![CDATA[<article><h1>22 insults no developer wants to hear</h1><p>The technology world is a bit different than the pretty, coiffed world of suits and salesdroids where everyone is polite, even when they hate your guts and think you're an idiot. Suit-clad managers may smile and hide their real message by the way they say you're doing "great, real great pal," but programmers often speak their minds, and when that mind has something unpleasant to say, look out, feelings.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/868f0cfe087642b6c2b1822efda9a0b969688985.jpg"></article>]]></description>
            <link>http://www.infoworld.com/article/3051626/application-development/22-insults-no-developer-wants-to-hear.html</link>
            <guid isPermaLink="false">89ff52ea-2b2e-48ec-920a-581e83724f5d</guid>
            <pubDate>Tue, 12 Apr 2016 16:15:27 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Managed services killed DevOps]]></title>
            <description><![CDATA[<article><h1>Managed services killed DevOps</h1><p>DevOps, as we know it, is dead. Perhaps not many people agree with me, but the age of DevOps is just about over. Then again, perhaps this won't come as a surprise to some. While certain industries somehow manage to survive for years - decades, perhaps - without needing to make fundamental changes, that's absolutely not the case in the software world.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/e8c0fe86cf43e3e3156d0539903c60df1372dd26.jpg"></article>]]></description>
            <link>http://techcrunch.com/2016/04/07/devops-is-dead-long-live-devops/</link>
            <guid isPermaLink="false">8e037063-362c-4d1e-afa1-e34c07dbeec3</guid>
            <pubDate>Thu, 07 Apr 2016 21:38:21 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[The next evolution of enterprise devops is to harden it]]></title>
            <description><![CDATA[<article><h1>The next evolution of enterprise devops is to harden it</h1><p>In today's digital age, business innovation is largely driven by software. To win, serve, and retain their customers, enterprises must release application updates at an increasingly faster pace. A great idea, killer functionality and a robust technology are all as important as ever, but they don't mean much if you can't get your code to your end users in a fast, predictable manner with high quality.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/bfc871199d040ddbfc122ec707bca81ef99f2cab.jpg"></article>]]></description>
            <link>http://www.infoworld.com/article/3049995/devops/the-next-evolution-of-enterprise-devops-is-to-harden-it.html</link>
            <guid isPermaLink="false">cb9f943f-5daa-457e-8a1f-4d6960d5a84f</guid>
            <pubDate>Thu, 07 Apr 2016 18:26:08 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Linux is so grown up, it's ready for marriage with containers]]></title>
            <description><![CDATA[<article><h1>Linux is so grown up, it's ready for marriage with containers</h1><p>Linux is all grown up. It has nothing left to prove. There's never been a year of the Linux desktop and there probably never will be, but it runs on the majority of the world's servers. It never took over the desktop, it did an end-run around it: there are more Linux-based client devices accessing those servers than there are Windows boxes.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/60e90f515bf5eef83d0362a121bcdecafca63f2e.jpg"></article>]]></description>
            <link>http://www.theregister.co.uk/2016/04/07/containers_and_linux/</link>
            <guid isPermaLink="false">333b0ef7-0d94-4559-b92f-f261c4cebab5</guid>
            <pubDate>Thu, 07 Apr 2016 18:11:08 GMT</pubDate>
        </item>
    </channel>
</rss>